#!/usr/bin/env python
# -*- coding: utf-8 -*-


import rospy
from sensor_msgs.msg import JointState
from funciones import *
from markers import *

# Joint names
jnames = ["abductor3_joint", "muslo3_joint", "tobillo3_joint",
          "abductor1_joint", "muslo1_joint", "tobillo1_joint",
          "abductor4_joint", "muslo4_joint", "tobillo4_joint",
          "abductor2_joint", "muslo2_joint", "tobillo2_joint"]

# Posición deseada
pata =  1
qd = np.deg2rad(np.array([0,0,0,
						  0,0,0,
						  0,0,0,
						  0,0,0]))

xd,Td = update_initial_state(qd)
xd1 = xd[0]; xd2 = xd[1]; xd3 = xd[2]; xd4 = xd[3]


# Inicializar vector
q0 = np.deg2rad(np.array([30,0,0,
			   			  0,30,0,
			   			  0,30,0,
			   			  0,0,-30]))

# Pata 1: Superior Izquierda (q1) y posición actual
q1 = q0[3:6]
# Pata 2: Inferior Izquierda (q2)
q2 = q0[9:12]
# Pata 3: Superior Derecha (q3)
q3 = q0[0:3]
# Pata 4: Inferior Derecha (q4)
q4 = q0[6:9]

x,T = update_initial_state(q0)
x1 = x[0]; x2 = x[1]; x3 = x[2]; x4 = x[3]

# Ball markers
bmarker1 = BallMarker(color['RED'])
bmarker2 = BallMarker(color['BLUE'])
bmarker3 = BallMarker(color['GREEN'])
bmarker4 = BallMarker(color['YELLOW'])


# Creación de nodo
rospy.init_node('diff_fk_joints_pos_test')

# Publicar al tópico de articulaciones
pub = rospy.Publisher('/joint_states',JointState,queue_size=10)

# Creación del mensaje a enviar 
articulaciones = JointState()
articulaciones.name = jnames 
articulaciones.position = q0

freq = 20
dt = 1.0/freq
rate = rospy.Rate(freq)
counter_xd = 0 

while not rospy.is_shutdown():
	articulaciones.header.stamp = rospy.Time.now()
	# print(np.round(q0,2))
	articulaciones.position = q0
	pub.publish(articulaciones)
	# Pata 1: Superior Izquierda (q1)
	q1 = q0[3:6]
	q1 = control_fkdiff(x1,xd1,q1,dt,1)

	# Pata 2: Inferior Izquierda (q2)
	q2 = q0[9:12]
	q2 = control_fkdiff(x2,xd2,q2,dt,2)

	# Pata 3: Superior Derecha (q3)
	q3 = q0[0:3]
	q3 = control_fkdiff(x3,xd3,q3,dt,3)
	
	# Pata 4: Inferior Derecha (q4)
	q4 = q0[6:9]
	q4 = control_fkdiff(x4,xd4,q4,dt,4)
	
	# Actualización de ángulo (q0)
	q0[3:6] = q1; q0[9:12] = q2;	q0[6:9] = q4; q0[0:3] = q3
	# Current configuration trnaformation to current position
	x,T = update_initial_state(q0)
	x1 = x[0]; x2 = x[1]; x3 = x[2]; x4 = x[3]
	bmarker1.position(Td[0])
	bmarker2.position(Td[1])
	bmarker3.position(Td[2])
	bmarker4.position(Td[3])
	rate.sleep()
