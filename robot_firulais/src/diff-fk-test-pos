#!/usr/bin/env python
# -*- coding: utf-8 -*-


import rospy
from sensor_msgs.msg import JointState
from funciones import *

# Joint names
jnames = ["front_right_j1", "front_right_j2", "front_right_j3",
          "front_left_j1", "front_left_j2", "front_left_j3",
          "rear_right_j1", "rear_right_j2", "rear_right_j3",
          "rear_left_j1", "rear_left_j2", "rear_left_j3"]

# Posición deseada 
qd = np.deg2rad(np.array([30,0,0]))
Td = fk_pata1_pos(qd)
xd = Td[0:3,3]
# Inicializar vector
q0 = np.deg2rad(np.array([0,0,0,
			   			  30,90,40,
			   			  50,0,0,
			   			  0,0,0]))

# Pata 1: Superior Izquierda (q1) y posición actual
q1 = q0[3:6]
T = fk_pata1_pos(q1)
x = T[0:3,3]

# Pata 2: Inferior Izquierda (q2)
q2 = q0[9:12]

# Pata 3: Superior Derecha (q3)
q3 = q0[0:3]
	
# Pata 4: Inferior Derecha (q4)
q4 = q0[6:9]


# Creación de nodo
rospy.init_node('joints_test')

# Publicar al tópico de articulaciones
pub = rospy.Publisher('/joint_states',JointState,queue_size=10)

# Creación del mensaje a enviar 
articulaciones = JointState()
articulaciones.name = jnames 
articulaciones.position = q0

freq = 20
dt = 1.0/freq
rate = rospy.Rate(freq)
counter_xd = 0 


while not rospy.is_shutdown():
	articulaciones.header.stamp = rospy.Time.now()
	articulaciones.position = q0
	pub.publish(articulaciones)
	# Pata 1: Superior Izquierda (q1)
	q1 = q0[3:6]

	# Kinematic control law for the pose (complete here)
	k = 0.4# Ganancia proporcional
	k_a = 0.005
	# --------------------------------------------------
	# Error por la posición
	ep = x - xd
	e = np.array([[ep[0]],[ep[1]],[ep[2]]]) 
	e_dot = -k*e
	# J = jacob_a_pos(q1,1)
	J = jacob_g(q1,1)
	J = J[0:3,0:3]
	try: 
	    J_mul = (J.transpose()).dot(np.linalg.inv(J.dot(J.transpose())))
	except np.linalg.LinAlgError:
		print("Matriz no completa")
		J_mul = (J.transpose()).dot(np.linalg.inv(J.dot(J.transpose()) + k_a*np.eye(3)))

	q_dot = J_mul.dot(e_dot)
	q_dot_vect = np.array([q_dot[0,0],q_dot[1,0],q_dot[2,0]])
	q1 =  q1 + dt*q_dot_vect
	# Current configuration trnaformation to current position
	T = fk_pata1_pos(q1)
	x = T[0:3,3]
	q0[3:6] = q1


	rate.sleep()