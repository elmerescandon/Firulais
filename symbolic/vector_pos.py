# -- coding: utf-8 --
import numpy as np 
import sympy as sp 
import sympy.matrices as Matrix
from funciones import *

# Cinemática diferencial de base flotante-------------------------
sp.init_printing()

pb_x,pb_y,pb_z,omeg_b,eps_bx,eps_by,eps_bz = sp.symbols('pb_x pb_y pb_z omeg_b eps_bx eps_by eps_bz')
q11, q12, q13 = sp.symbols("q11 q12 q13")
l1, l2, l3, l4 = sp.symbols("l1 l2 l3 l4")
d1 = sp.symbols("d1")

cos = sp.cos 
sin = sp.sin
sqrt = sp.sqrt

FK_1 = Matrix([[pb_x + 2*(eps_bx*eps_by - eps_bz*omeg_b)*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + (-4*eps_bx - 4*omeg_b + 1)*(-l1 + l3*sin(q12) + l4*sin(q12 + q13))], 
	           [pb_y - 2*(eps_bx*eps_by + eps_bz*omeg_b)*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + (4*eps_by + 4*omeg_b - 1)*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13))], 
	           [pb_z + 2*(-eps_bx*eps_bz + eps_by*omeg_b)*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + (-4*eps_bz - 4*omeg_b + 1)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13))], 
	           [0.5*sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)], 
	           [(1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)], 
	           [(1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)], 
	           [(1.0*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) + 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(-eps_bx*omeg_b + eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (-2.0*eps_bx - 2.0*omeg_b + 0.5)*cos(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*sin(q11)*cos(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)]])

J1 = sp.simplify(FK_1.jacobian(sp.Matrix([pb_x,pb_y,pb_z,omeg_b,eps_bx,eps_by,eps_bz,q11, q12, q13])))
print(J1)

# Jacobiano Analítico para la pata 1 

general_analytic = np.array([
	[1, 0, 0, -2*eps_by*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*eps_bz*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 4*l1 - 4*l3*sin(q12) - 4*l4*sin(q12 + q13), 2*eps_by*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) - 2*eps_bz*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 4*l1 - 4*l3*sin(q12) - 4*l4*sin(q12 + q13), 2*eps_bx*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) - 2*omeg_b*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), -2*eps_bx*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*omeg_b*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(eps_bx*eps_by - eps_bz*omeg_b)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(-eps_bx*eps_by + eps_bz*omeg_b)*(l3*sin(q12) + l4*sin(q12 + q13))*sin(q11) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*(l3*sin(q12) + l4*sin(q12 + q13))*cos(q11) + (l3*cos(q12) + l4*cos(q12 + q13))*(-4*eps_bx - 4*omeg_b + 1), l4*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + (-4*eps_bx - 4*omeg_b + 1)*cos(q12 + q13))], 
	[0, 1, 0, 4*d1 + 2*eps_bx*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*eps_bz*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 4*l2*cos(q11) + 4*l3*sin(q11)*cos(q12) + 4*l4*sin(q11)*cos(q12 + q13), -2*eps_by*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*omeg_b*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), 4*d1 - 2*eps_bx*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) - 2*eps_bz*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 4*l2*cos(q11) + 4*l3*sin(q11)*cos(q12) + 4*l4*sin(q11)*cos(q12 + q13), -2*eps_by*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*omeg_b*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)), 2*(-eps_bx*omeg_b + eps_by*eps_bz)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + (4*eps_by + 4*omeg_b - 1)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), -2*(eps_bx*eps_by + eps_bz*omeg_b)*(l3*cos(q12) + l4*cos(q12 + q13)) + 2*(-eps_bx*omeg_b + eps_by*eps_bz)*(l3*sin(q12) + l4*sin(q12 + q13))*cos(q11) + (l3*sin(q12) + l4*sin(q12 + q13))*(-4*eps_by - 4*omeg_b + 1)*sin(q11), l4*(-2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(-eps_bx*omeg_b + eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + (-4*eps_by - 4*omeg_b + 1)*sin(q11)*sin(q12 + q13))], 
	[0, 0, 1, 2*eps_bx*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 2*eps_by*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 4*l2*sin(q11) - 4*l3*cos(q11)*cos(q12) - 4*l4*cos(q11)*cos(q12 + q13), -2*eps_bz*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*omeg_b*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*eps_bz*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 2*omeg_b*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)), -2*eps_bx*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*eps_by*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 4*l2*sin(q11) - 4*l3*cos(q11)*cos(q12) - 4*l4*cos(q11)*cos(q12 + q13), 2*(eps_bx*omeg_b + eps_by*eps_bz)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + (4*eps_bz + 4*omeg_b - 1)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(-eps_bx*eps_bz + eps_by*omeg_b)*(l3*cos(q12) + l4*cos(q12 + q13)) - 2*(eps_bx*omeg_b + eps_by*eps_bz)*(l3*sin(q12) + l4*sin(q12 + q13))*sin(q11) + (l3*sin(q12) + l4*sin(q12 + q13))*(4*eps_bz + 4*omeg_b - 1)*cos(q11), l4*(2*(-eps_bx*eps_bz + eps_by*omeg_b)*cos(q12 + q13) - 2*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q12 + q13)*cos(q11))],
	[0, 0, 0, (0.5*eps_bx*sin(q12 + q13)*cos(q11) + 0.5*eps_bx*cos(q11) + 0.5*eps_by*cos(q11)*cos(q12 + q13) + 0.5*eps_bz*sin(q11)*cos(q12 + q13) + 0.5*eps_bz*cos(q12 + q13) + 1.0*sin(q11)*sin(q12 + q13) + 1.0*sin(q11) + 1.0*sin(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (-0.5*eps_by*sin(q11)*cos(q12 + q13) + 0.5*eps_by*cos(q12 + q13) + 0.5*eps_bz*cos(q11)*cos(q12 + q13) + 0.5*omeg_b*sin(q12 + q13)*cos(q11) + 0.5*omeg_b*cos(q11) + 1.0*sin(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (-0.5*eps_bx*sin(q11)*cos(q12 + q13) + 0.5*eps_bx*cos(q12 + q13) - 0.5*eps_bz*sin(q12 + q13)*cos(q11) + 0.5*eps_bz*cos(q11) + 0.5*omeg_b*cos(q11)*cos(q12 + q13) + 1.0*sin(q11)*sin(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (0.5*eps_bx*cos(q11)*cos(q12 + q13) - 0.5*eps_by*sin(q12 + q13)*cos(q11) + 0.5*eps_by*cos(q11) + 0.5*omeg_b*sin(q11)*cos(q12 + q13) + 0.5*omeg_b*cos(q12 + q13) + 1.0*sin(q11))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (0.5*(-eps_bx*eps_by + eps_bz*omeg_b)*cos(q11)*cos(q12 + q13) - 0.5*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11)*cos(q12 + q13) + 0.5*(-eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) - 0.5*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11) + (1.0*eps_by + 1.0*omeg_b - 0.25)*sin(q12 + q13)*cos(q11) + (1.0*eps_bz + 1.0*omeg_b - 0.25)*cos(q11))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (0.5*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 0.5*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 0.5*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 0.5*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (1.0*eps_bx + 1.0*omeg_b - 0.25)*cos(q12 + q13) + (1.0*eps_by + 1.0*omeg_b - 0.25)*sin(q11)*cos(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1), (0.5*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 0.5*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 0.5*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 0.5*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (1.0*eps_bx + 1.0*omeg_b - 0.25)*cos(q12 + q13) + (1.0*eps_by + 1.0*omeg_b - 0.25)*sin(q11)*cos(q12 + q13))/sqrt(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)], 
	[0, 0, 0, (-(1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(eps_bx*sin(q12 + q13)*cos(q11) + eps_bx*cos(q11) + eps_by*cos(q11)*cos(q12 + q13) + eps_bz*sin(q11)*cos(q12 + q13) + eps_bz*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13) + 2*sin(q11) + 2*sin(q12 + q13)) + (1.0*eps_bx*sin(q11)*sin(q12 + q13) + 1.0*eps_bx*sin(q11) - 1.0*eps_by*cos(q12 + q13) - 2.0*sin(q12 + q13)*cos(q11) - 2.0*cos(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), (1.0*(eps_bz*cos(q12 + q13) + omeg_b*sin(q11)*sin(q12 + q13) + omeg_b*sin(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(-eps_by*sin(q11)*cos(q12 + q13) + eps_by*cos(q12 + q13) + eps_bz*cos(q11)*cos(q12 + q13) + omeg_b*sin(q12 + q13)*cos(q11) + omeg_b*cos(q11) + 2*sin(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*eps_bz*sin(q11)*sin(q12 + q13) - 1.0*eps_bz*sin(q11) - 1.0*omeg_b*cos(q12 + q13) - 2.0*cos(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(-eps_bx*sin(q11)*cos(q12 + q13) + eps_bx*cos(q12 + q13) - eps_bz*sin(q12 + q13)*cos(q11) + eps_bz*cos(q11) + omeg_b*cos(q11)*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*eps_bx*cos(q12 + q13) + 1.0*eps_by*sin(q11)*sin(q12 + q13) - 1.0*eps_by*sin(q11) - 2.0*sin(q12 + q13)*cos(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(eps_bx*cos(q11)*cos(q12 + q13) - eps_by*sin(q12 + q13)*cos(q11) + eps_by*cos(q11) + omeg_b*sin(q11)*cos(q12 + q13) + omeg_b*cos(q12 + q13) + 2*sin(q11)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11) + (2.0*eps_bz + 2.0*omeg_b - 0.5)*sin(q11)*sin(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11) + (-4*eps_by - 4*omeg_b + 1)*sin(q12 + q13)*cos(q11) + (-4*eps_bz - 4*omeg_b + 1)*cos(q11))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_bz - eps_by*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*sin(q12 + q13)*cos(q11))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2)], 
	[0, 0, 0, (-(1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(eps_bx*sin(q12 + q13)*cos(q11) + eps_bx*cos(q11) + eps_by*cos(q11)*cos(q12 + q13) + eps_bz*sin(q11)*cos(q12 + q13) + eps_bz*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13) + 2*sin(q11) + 2*sin(q12 + q13)) + (1.0*eps_bx*sin(q11)*cos(q12 + q13) + 1.0*eps_by*sin(q11) + 1.0*eps_by*sin(q12 + q13) - 1.0*eps_bz*cos(q11) - 2.0*cos(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), (1.0*(eps_by*cos(q11) + eps_bz*sin(q11) - eps_bz*sin(q12 + q13) + omeg_b*sin(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(-eps_by*sin(q11)*cos(q12 + q13) + eps_by*cos(q12 + q13) + eps_bz*cos(q11)*cos(q12 + q13) + omeg_b*sin(q12 + q13)*cos(q11) + omeg_b*cos(q11) + 2*sin(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), (1.0*(eps_bx*cos(q11) + eps_bz*sin(q11)*cos(q12 + q13) + omeg_b*sin(q11) + omeg_b*sin(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(-eps_bx*sin(q11)*cos(q12 + q13) + eps_bx*cos(q12 + q13) - eps_bz*sin(q12 + q13)*cos(q11) + eps_bz*cos(q11) + omeg_b*cos(q11)*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*eps_bx*sin(q11) - 1.0*eps_bx*sin(q12 + q13) + 1.0*eps_by*sin(q11)*cos(q12 + q13) - 1.0*omeg_b*cos(q11) - 2.0*cos(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(eps_bx*cos(q11)*cos(q12 + q13) - eps_by*sin(q12 + q13)*cos(q11) + eps_by*cos(q11) + omeg_b*sin(q11)*cos(q12 + q13) + omeg_b*cos(q12 + q13) + 2*sin(q11)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bz + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11) + (-4*eps_by - 4*omeg_b + 1)*sin(q12 + q13)*cos(q11) + (-4*eps_bz - 4*omeg_b + 1)*cos(q11))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*cos(q12 + q13) - 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (2.0*eps_bz + 2.0*omeg_b - 0.5)*sin(q12 + q13)*cos(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*cos(q12 + q13) - 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (2.0*eps_bz + 2.0*omeg_b - 0.5)*sin(q12 + q13)*cos(q11))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11) + 1.0*(-eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11) + 1.0*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_bz - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2)], 
	[0, 0, 0, ((-1.0*eps_bx*cos(q11)*cos(q12 + q13) + 1.0*eps_by*sin(q12 + q13)*cos(q11) + 1.0*eps_bz*sin(q11)*sin(q12 + q13) + 1.0*eps_bz*sin(q12 + q13) - 2.0*sin(q11)*cos(q12 + q13) - 2.0*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13))*(eps_bx*sin(q12 + q13)*cos(q11) + eps_bx*cos(q11) + eps_by*cos(q11)*cos(q12 + q13) + eps_bz*sin(q11)*cos(q12 + q13) + eps_bz*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13) + 2*sin(q11) + 2*sin(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((-1.0*eps_by*sin(q11)*sin(q12 + q13) + 1.0*eps_by*sin(q12 + q13) + 1.0*eps_bz*sin(q12 + q13)*cos(q11) - 1.0*omeg_b*cos(q11)*cos(q12 + q13) - 2.0*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (-eps_by*sin(q11)*cos(q12 + q13) + eps_by*cos(q12 + q13) + eps_bz*cos(q11)*cos(q12 + q13) + omeg_b*sin(q12 + q13)*cos(q11) + omeg_b*cos(q11) + 2*sin(q12 + q13))*(1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((-1.0*eps_bx*sin(q11)*sin(q12 + q13) + 1.0*eps_bx*sin(q12 + q13) + 1.0*eps_bz*cos(q11)*cos(q12 + q13) + 1.0*omeg_b*sin(q12 + q13)*cos(q11) - 2.0*sin(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (-eps_bx*sin(q11)*cos(q12 + q13) + eps_bx*cos(q12 + q13) - eps_bz*sin(q12 + q13)*cos(q11) + eps_bz*cos(q11) + omeg_b*cos(q11)*cos(q12 + q13) + 2*sin(q11)*sin(q12 + q13))*(1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), (1.0*(eps_bx*sin(q12 + q13)*cos(q11) + eps_by*cos(q11)*cos(q12 + q13) + omeg_b*sin(q11)*sin(q12 + q13) + omeg_b*sin(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (eps_bx*cos(q11)*cos(q12 + q13) - eps_by*sin(q12 + q13)*cos(q11) + eps_by*cos(q11) + omeg_b*sin(q11)*cos(q12 + q13) + omeg_b*cos(q12 + q13) + 2*sin(q11))*(1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13)))/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13)*cos(q11) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11)*sin(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11)*cos(q12 + q13) + (-2.0*eps_by - 2.0*omeg_b + 0.5)*cos(q11)*cos(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) - (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11) + (-4*eps_by - 4*omeg_b + 1)*sin(q12 + q13)*cos(q11) + (-4*eps_bz - 4*omeg_b + 1)*cos(q11))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*sin(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*sin(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2), ((1.0*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*sin(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*sin(q12 + q13))*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1) + (1.0*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 1.0*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 1.0*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 1.0*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (2.0*eps_bx + 2.0*omeg_b - 0.5)*cos(q12 + q13) + (2.0*eps_by + 2.0*omeg_b - 0.5)*sin(q11)*cos(q12 + q13))*(2*(eps_bx*eps_by - eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) - 2*(eps_bx*eps_by + eps_bz*omeg_b)*sin(q12 + q13) - 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*cos(q11)*cos(q12 + q13) + (4*eps_bx + 4*omeg_b - 1)*cos(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*cos(q12 + q13))/2)/(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*cos(q12 + q13) + 2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*cos(q11)*cos(q12 + q13) + 2*(eps_bx*omeg_b - eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + 2*(eps_bx*omeg_b + eps_by*eps_bz)*cos(q11) + (4*eps_bx + 4*omeg_b - 1)*sin(q12 + q13) + (4*eps_by + 4*omeg_b - 1)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q11) + 1)**(3/2)]])

# Jacobiano analítico para la pata 1 únicamente considerando la posición

analytic_jacob_pos = np.array([
	[1, 0, 0, -2*eps_by*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*eps_bz*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 4*l1 - 4*l3*sin(q12) - 4*l4*sin(q12 + q13), 2*eps_by*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) - 2*eps_bz*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 4*l1 - 4*l3*sin(q12) - 4*l4*sin(q12 + q13), 2*eps_bx*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) - 2*omeg_b*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), -2*eps_bx*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*omeg_b*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(eps_bx*eps_by - eps_bz*omeg_b)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(-eps_bx*eps_by + eps_bz*omeg_b)*(l3*sin(q12) + l4*sin(q12 + q13))*sin(q11) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*(l3*sin(q12) + l4*sin(q12 + q13))*cos(q11) + (l3*cos(q12) + l4*cos(q12 + q13))*(-4*eps_bx - 4*omeg_b + 1), l4*(2*(-eps_bx*eps_by + eps_bz*omeg_b)*sin(q11)*sin(q12 + q13) + 2*(eps_bx*eps_bz + eps_by*omeg_b)*sin(q12 + q13)*cos(q11) + (-4*eps_bx - 4*omeg_b + 1)*cos(q12 + q13))], 
	[0, 1, 0, 4*d1 + 2*eps_bx*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*eps_bz*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 4*l2*cos(q11) + 4*l3*sin(q11)*cos(q12) + 4*l4*sin(q11)*cos(q12 + q13), -2*eps_by*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*omeg_b*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), 4*d1 - 2*eps_bx*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) - 2*eps_bz*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + 4*l2*cos(q11) + 4*l3*sin(q11)*cos(q12) + 4*l4*sin(q11)*cos(q12 + q13), -2*eps_by*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) - 2*omeg_b*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)), 2*(-eps_bx*omeg_b + eps_by*eps_bz)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + (4*eps_by + 4*omeg_b - 1)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)), -2*(eps_bx*eps_by + eps_bz*omeg_b)*(l3*cos(q12) + l4*cos(q12 + q13)) + 2*(-eps_bx*omeg_b + eps_by*eps_bz)*(l3*sin(q12) + l4*sin(q12 + q13))*cos(q11) + (l3*sin(q12) + l4*sin(q12 + q13))*(-4*eps_by - 4*omeg_b + 1)*sin(q11), l4*(-2*(eps_bx*eps_by + eps_bz*omeg_b)*cos(q12 + q13) + 2*(-eps_bx*omeg_b + eps_by*eps_bz)*sin(q12 + q13)*cos(q11) + (-4*eps_by - 4*omeg_b + 1)*sin(q11)*sin(q12 + q13))], 
	[0, 0, 1, 2*eps_bx*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 2*eps_by*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 4*l2*sin(q11) - 4*l3*cos(q11)*cos(q12) - 4*l4*cos(q11)*cos(q12 + q13), -2*eps_bz*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*omeg_b*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*eps_bz*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 2*omeg_b*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)), -2*eps_bx*(-l1 + l3*sin(q12) + l4*sin(q12 + q13)) + 2*eps_by*(d1 + l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)) + 4*l2*sin(q11) - 4*l3*cos(q11)*cos(q12) - 4*l4*cos(q11)*cos(q12 + q13), 2*(eps_bx*omeg_b + eps_by*eps_bz)*(-l2*sin(q11) + l3*cos(q11)*cos(q12) + l4*cos(q11)*cos(q12 + q13)) + (4*eps_bz + 4*omeg_b - 1)*(l2*cos(q11) + l3*sin(q11)*cos(q12) + l4*sin(q11)*cos(q12 + q13)), 2*(-eps_bx*eps_bz + eps_by*omeg_b)*(l3*cos(q12) + l4*cos(q12 + q13)) - 2*(eps_bx*omeg_b + eps_by*eps_bz)*(l3*sin(q12) + l4*sin(q12 + q13))*sin(q11) + (l3*sin(q12) + l4*sin(q12 + q13))*(4*eps_bz + 4*omeg_b - 1)*cos(q11), l4*(2*(-eps_bx*eps_bz + eps_by*omeg_b)*cos(q12 + q13) - 2*(eps_bx*omeg_b + eps_by*eps_bz)*sin(q11)*sin(q12 + q13) + (4*eps_bz + 4*omeg_b - 1)*sin(q12 + q13)*cos(q11))]]